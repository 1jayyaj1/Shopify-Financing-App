{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation exampleProductCreate($input: ProductInput!) {\\n        productCreate(input: $input) {\\n        userErrors {\\n            field\\n            message\\n        }\\n        product {\\n            id\\n            title\\n            productType\\n            vendor\\n        }\\n        }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Banner, Button, Card, Form, FormLayout, Layout, Page, PageActions, Stack, TextField, Toast } from '@shopify/polaris';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nvar UPDATE_REPAYMENT = gql(_templateObject());\n\nvar AnnotatedLayout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AnnotatedLayout, _React$Component);\n\n  function AnnotatedLayout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AnnotatedLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AnnotatedLayout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      paymentParam: 2637,\n      interest: '10%',\n      period: '4',\n      frequency: '1',\n      showToast: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      _this.setState({\n        interest: _this.state.interest,\n        period: _this.state.period,\n        frequency: _this.state.frequency\n      });\n\n      console.log('submission', _this.state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(AnnotatedLayout, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var interest = this.state.interest;\n      var period = this.state.period;\n      var frequency = this.state.frequency;\n      var paymentParam = this.state.paymentParam;\n      return React.createElement(Mutation, {\n        mutation: UPDATE_REPAYMENT\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n        var showError = error && React.createElement(Banner, {\n          status: \"critical\"\n        }, error.message);\n        var showToast = data && data.repaymentUpdate && React.createElement(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n        return React.createElement(Page, null, React.createElement(Form, {\n          onSubmit: _this2.handleSubmit\n        }, React.createElement(Layout, null, showToast, React.createElement(Layout.Section, null, showError), React.createElement(Layout.AnnotatedSection, {\n          title: \"Default interest rate\",\n          description: \"This interest rate will be used to calculate the payments of your purchase.\"\n        }, React.createElement(Card, {\n          sectioned: true\n        }, React.createElement(TextField, {\n          value: interest,\n          onChange: _this2.handleChange('interest'),\n          label: \"Interest rate\",\n          type: \"interest\"\n        }))), React.createElement(Layout.AnnotatedSection, {\n          title: \"Default financing period\",\n          description: \"This financing period is the length of the reimboursment period. (in years)\"\n        }, React.createElement(Card, {\n          sectioned: true\n        }, React.createElement(TextField, {\n          value: period,\n          onChange: _this2.handleChange('period'),\n          label: \"Payback period\",\n          type: \"period\"\n        }))), React.createElement(Layout.AnnotatedSection, {\n          title: \"Default payment frequency\",\n          description: \"This payment frequency is the number of payments for each year\"\n        }, React.createElement(Card, {\n          sectioned: true\n        }, React.createElement(TextField, {\n          value: frequency,\n          onChange: _this2.handleChange('frequency'),\n          label: \"Payment frequency\",\n          type: \"frequency\"\n        })))), React.createElement(Stack, {\n          distribution: \"trailing\"\n        }, React.createElement(PageActions, {\n          primaryAction: [{\n            content: 'Save',\n            onAction: function onAction() {\n              var productInput = {\n                id: paymentParam,\n                title: interest,\n                productType: period,\n                vendor: frequency\n              };\n              handleSubmit({\n                variables: {\n                  input: productInput\n                }\n              });\n            }\n          }]\n        }))));\n      });\n    }\n  }]);\n\n  return AnnotatedLayout;\n}(React.Component);\n\nexport default AnnotatedLayout;","map":{"version":3,"sources":["/Users/jay/Desktop/lit-app/pages/annotated-layout.js"],"names":["Banner","Button","Card","Form","FormLayout","Layout","Page","PageActions","Stack","TextField","Toast","gql","Mutation","UPDATE_REPAYMENT","AnnotatedLayout","paymentParam","interest","period","frequency","showToast","setState","state","console","log","field","value","handleSubmit","error","data","showError","message","repaymentUpdate","handleChange","content","onAction","productInput","id","title","productType","vendor","variables","input","React","Component"],"mappings":"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","sourcesContent":["import {\n    Banner,\n    Button,\n    Card,\n    Form,\n    FormLayout,\n    Layout,\n    Page,\n    PageActions,\n    Stack,\n    TextField,\n    Toast\n  } from '@shopify/polaris';\n  import gql from 'graphql-tag';\n  import { Mutation } from 'react-apollo';\n\n  const UPDATE_REPAYMENT = gql`\n    mutation exampleProductCreate($input: ProductInput!) {\n        productCreate(input: $input) {\n        userErrors {\n            field\n            message\n        }\n        product {\n            id\n            title\n            productType\n            vendor\n        }\n        }\n    }\n  `;\n\n  \n  class AnnotatedLayout extends React.Component {\n    state = {\n      paymentParam: 2637,\n      interest: '10%',\n      period: '4',\n      frequency: '1',\n      showToast: false,\n    };\n  \n    render() {\n      const { interest } = this.state;\n      const { period } = this.state;\n      const { frequency } = this.state;\n      const { paymentParam } = this.state;\n      return (\n        <Mutation\n          mutation={UPDATE_REPAYMENT}\n        >\n          {(handleSubmit, { error, data }) => {\n            const showError = error && (\n              <Banner status=\"critical\">{error.message}</Banner>\n            );\n            const showToast = data && data.repaymentUpdate && (\n              <Toast\n                content=\"Sucessfully updated\"\n                onDismiss={() => this.setState({ showToast: false })}\n              />\n            );\n\n      return (\n        <Page>\n            <Form onSubmit={this.handleSubmit}>\n                <Layout>\n                    {showToast}\n                    <Layout.Section>\n                        {showError}\n                    </Layout.Section>\n                    <Layout.AnnotatedSection\n                    title=\"Default interest rate\"\n                    description=\"This interest rate will be used to calculate the payments of your purchase.\"\n                    >\n                        <Card sectioned>\n                            <TextField\n                                value={interest}\n                                onChange={this.handleChange('interest')}\n                                label=\"Interest rate\"\n                                type=\"interest\"\n                            />\n                        </Card>\n                    </Layout.AnnotatedSection>\n                    <Layout.AnnotatedSection\n                    title=\"Default financing period\"\n                    description=\"This financing period is the length of the reimboursment period. (in years)\"\n                    >\n                        <Card sectioned>\n                            <TextField\n                            value={period}\n                            onChange={this.handleChange('period')}\n                            label=\"Payback period\"\n                            type=\"period\"\n                            />\n                        </Card>\n                    </Layout.AnnotatedSection>\n                    <Layout.AnnotatedSection\n                    title=\"Default payment frequency\"\n                    description=\"This payment frequency is the number of payments for each year\"\n                    >\n                        <Card sectioned>\n                            <TextField\n                            value={frequency}\n                            onChange={this.handleChange('frequency')}\n                            label=\"Payment frequency\"\n                            type=\"frequency\"\n                            />\n                        </Card>\n                    </Layout.AnnotatedSection>\n                </Layout>\n                <Stack distribution=\"trailing\">\n                <PageActions\n                    primaryAction={[\n                        {\n                        content: 'Save',\n                        onAction: () => {\n                            const productInput = {\n                                id: paymentParam,\n                                title: interest,\n                                productType: period,\n                                vendor: frequency,\n                            };\n                            handleSubmit({\n                                variables: { input: productInput },\n                            });\n                        },\n                        },\n                    ]}\n                />\n                </Stack>\n            </Form>\n        </Page>\n         );\n        }}\n      </Mutation>\n      );\n    }\n  \n    handleSubmit = () => {\n      this.setState({\n        interest: this.state.interest,\n        period: this.state.period,\n        frequency: this.state.frequency\n      });\n      console.log('submission', this.state);\n    };\n  \n    handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n    };\n  }\n  \n  export default AnnotatedLayout;"]},"metadata":{},"sourceType":"module"}