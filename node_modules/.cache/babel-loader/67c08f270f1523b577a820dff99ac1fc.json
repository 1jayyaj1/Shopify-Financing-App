{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation productVariantUpdate($input: ProductVariantInput!) {\\n      productVariantUpdate(input: $input) {\\n        userErrors {\\n          field\\n          message\\n        }\\n        product {\\n          title\\n        }\\n        productVariant {\\n          id\\n          price\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Banner, Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField, Toast, RangeSlider } from '@shopify/polaris';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport store from 'store-js';\nvar UPDATE_PRICE = gql(_templateObject());\n\nvar EditProduct =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  function EditProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      interest: 10,\n      period: 4,\n      frequency: 2,\n      price: '',\n      variantId: '',\n      value: 100,\n      showToast: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (value) {\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var r = _this.state.interest / _this.state.frequency / 100;\n      console.log(r);\n      var n = _this.state.frequency * _this.state.period;\n      console.log(n);\n      var discounter = r * price / (1 - Math.pow(1 + r, -n));\n      console.log(discounter);\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        discount: this.itemToBeConsumed()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          price = _this$state.price,\n          discount = _this$state.discount,\n          variantId = _this$state.variantId;\n      var suffixStyles = {\n        minWidth: '24px',\n        textAlign: 'right'\n      };\n      return React.createElement(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n        var showError = error && React.createElement(Banner, {\n          status: \"critical\"\n        }, error.message);\n        var showToast = data && data.productVariantUpdate && React.createElement(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n        return React.createElement(Page, null, React.createElement(Layout, null, showToast, React.createElement(Layout.Section, null, showError), React.createElement(Layout.Section, null, React.createElement(DisplayText, {\n          size: \"large\"\n        }, name), React.createElement(Form, null, React.createElement(Card, {\n          sectioned: true\n        }, React.createElement(FormLayout, null, React.createElement(FormLayout.Group, null, React.createElement(TextField, {\n          prefix: \"$\",\n          value: price,\n          disabled: true,\n          label: \"Original price\",\n          type: \"price\"\n        }), React.createElement(TextField, {\n          prefix: \"$\",\n          value: discount,\n          onChange: _this2.handleChange('discount'),\n          label: \"Discounted price\",\n          type: \"discount\"\n        })), React.createElement(\"p\", null, \"This sale price will expire in two weeks on\", ' ', _this2.props.expires), React.createElement(RangeSlider, {\n          label: \"Hue color mix\",\n          min: 0,\n          max: 360,\n          value: _this2.state.value,\n          onChange: _this2.handleChange,\n          prefix: React.createElement(\"p\", null, \"Hue\"),\n          suffix: React.createElement(\"p\", {\n            style: suffixStyles\n          }, _this2.state.value)\n        }))), React.createElement(PageActions, {\n          primaryAction: [{\n            content: 'Save',\n            onAction: function onAction() {\n              var productVariableInput = {\n                id: variantId,\n                price: discount\n              };\n              handleSubmit({\n                variables: {\n                  input: productVariableInput\n                }\n              });\n            }\n          }],\n          secondaryActions: [{\n            content: 'Remove discount'\n          }]\n        })))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/jay/Desktop/lit-app/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","Toast","RangeSlider","gql","Mutation","store","UPDATE_PRICE","EditProduct","interest","period","frequency","price","variantId","value","showToast","setState","item","get","variants","edges","node","id","r","state","console","log","n","discounter","Math","pow","toFixed","discount","itemToBeConsumed","name","suffixStyles","minWidth","textAlign","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","props","expires","content","onAction","productVariableInput","variables","input","React","Component"],"mappings":"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","sourcesContent":["import {\n    Banner,\n    Card,\n    DisplayText,\n    Form,\n    FormLayout,\n    Layout,\n    Page,\n    PageActions,\n    TextField,\n    Toast,\n    RangeSlider\n  } from '@shopify/polaris';\n  import gql from 'graphql-tag';\n  import { Mutation } from 'react-apollo';\n  import store from 'store-js';\n  \n  const UPDATE_PRICE = gql`\n    mutation productVariantUpdate($input: ProductVariantInput!) {\n      productVariantUpdate(input: $input) {\n        userErrors {\n          field\n          message\n        }\n        product {\n          title\n        }\n        productVariant {\n          id\n          price\n        }\n      }\n    }\n  `;\n\n\n\n  class EditProduct extends React.Component {\n    state = {\n      interest: 10,\n      period: 4,\n      frequency: 2,\n      price: '',\n      variantId: '',\n      value: 100,\n      showToast: false,\n    };\n  \n    componentDidMount() {\n      this.setState({ discount: this.itemToBeConsumed() });\n    }\n  \n    render() {\n      const { name, price, discount, variantId } = this.state;\n\n      const suffixStyles = {\n        minWidth: '24px',\n        textAlign: 'right',\n      };\n  \n      return (\n        <Mutation\n          mutation={UPDATE_PRICE}\n        >\n          {(handleSubmit, { error, data }) => {\n            const showError = error && (\n              <Banner status=\"critical\">{error.message}</Banner>\n            );\n            const showToast = data && data.productVariantUpdate && (\n              <Toast\n                content=\"Sucessfully updated\"\n                onDismiss={() => this.setState({ showToast: false })}\n              />\n            );\n\n            return (\n              <Page>\n                <Layout>\n                  {showToast}\n                  <Layout.Section>\n                    {showError}\n                  </Layout.Section>\n                  <Layout.Section>\n                    <DisplayText size=\"large\">{name}</DisplayText>\n                    <Form>\n                      <Card sectioned>\n                        <FormLayout>\n                          <FormLayout.Group>\n                            <TextField\n                              prefix=\"$\"\n                              value={price}\n                              disabled={true}\n                              label=\"Original price\"\n                              type=\"price\"\n                            />\n                            <TextField\n                              prefix=\"$\"\n                              value={discount}\n                              onChange={this.handleChange('discount')}\n                              label=\"Discounted price\"\n                              type=\"discount\"\n                            />\n                          </FormLayout.Group>\n                          <p>\n                            This sale price will expire in two weeks on{' '}\n                            {this.props.expires}\n                          </p>\n                          <RangeSlider\n                            label=\"Hue color mix\"\n                            min={0}\n                            max={360}\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            prefix={<p>Hue</p>}\n                            suffix={<p style={suffixStyles}>{this.state.value}</p>}\n                          />\n                        </FormLayout>\n                      </Card>\n                      <PageActions\n                        primaryAction={[\n                          {\n                            content: 'Save',\n                            onAction: () => {\n                              const productVariableInput = {\n                                id: variantId,\n                                price: discount\n                              };\n                              handleSubmit({\n                                variables: { input: productVariableInput },\n                              });\n                            },\n                          },\n                        ]}\n                        secondaryActions={[\n                          {\n                            content: 'Remove discount'\n                          },\n                        ]}\n                      />\n                    </Form>\n                  </Layout.Section>\n                </Layout>\n              </Page>\n            );\n          }}\n        </Mutation>\n      );\n    }\n  \n    handleChange = (value) => {\n        this.setState({value});\n      };\n  \n    itemToBeConsumed = () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const r = (this.state.interest/this.state.frequency)/100\n      console.log(r)\n      const n = this.state.frequency*this.state.period\n      console.log(n)\n      const discounter = (r*price)/(1-(Math.pow(1 + r, -n)))\n      console.log(discounter)\n      this.setState({ price, variantId });\n  \n      return (price - discounter).toFixed(2);\n    };\n  }\n  \n  export default EditProduct;"]},"metadata":{},"sourceType":"module"}