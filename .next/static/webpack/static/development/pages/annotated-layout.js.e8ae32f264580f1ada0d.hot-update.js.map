{"version":3,"file":"static/webpack/static/development/pages/annotated-layout.js.e8ae32f264580f1ada0d.hot-update.js","sources":["webpack:///./pages/annotated-layout.js"],"sourcesContent":["import {\n    Banner,\n    Button,\n    Card,\n    Form,\n    FormLayout,\n    Layout,\n    Page,\n    PageActions,\n    Stack,\n    TextField,\n    Toast\n  } from '@shopify/polaris';\n  import gql from 'graphql-tag';\n  import { Mutation } from 'react-apollo';\n\n  const UPDATE_REPAYMENT = gql`\n    mutation repaymentUpdate($input: AppPlanInputAppRecurringPricingInput!) {\n        repaymentUpdate(input: $input) {\n        userErrors {\n          field\n          message\n        }\n        paymentParam {\n          price\n        }\n      }\n    }\n  `;\n\n  \n  class AnnotatedLayout extends React.Component {\n    state = {\n      interest: '10%',\n      period: 4,\n      frequency: 1,\n      showToast: false,\n    };\n  \n    render() {\n      const { interest } = this.state;\n      const { period } = this.state;\n      const { frequency } = this.state;\n      return (\n        <Mutation\n          mutation={UPDATE_REPAYMENT}\n        >\n          {(handleSubmit, { error, data }) => {\n            const showError = error && (\n              <Banner status=\"critical\">{error.message}</Banner>\n            );\n            const showToast = data && data.repaymentUpdate && (\n              <Toast\n                content=\"Sucessfully updated\"\n                onDismiss={() => this.setState({ showToast: false })}\n              />\n            );\n\n      return (\n        <Page>\n            <Form onSubmit={this.handleSubmit}>\n                <Layout>\n                    {showToast}\n                    <Layout.Section>\n                        {showError}\n                    </Layout.Section>\n                    <Layout.AnnotatedSection\n                    title=\"Default interest rate\"\n                    description=\"This interest rate will be used to calculate the payments of your purchase.\"\n                    >\n                        <Card sectioned>\n                            <TextField\n                                value={interest}\n                                onChange={this.handleChange('interest')}\n                                label=\"Interest rate\"\n                                type=\"interest\"\n                            />\n                        </Card>\n                    </Layout.AnnotatedSection>\n                    <Layout.AnnotatedSection\n                    title=\"Default financing period\"\n                    description=\"This financing period is the length of the reimboursment period. (in years)\"\n                    >\n                        <Card sectioned>\n                            <TextField\n                            value={period}\n                            onChange={this.handleChange('period')}\n                            label=\"Payback period\"\n                            type=\"period\"\n                            />\n                        </Card>\n                    </Layout.AnnotatedSection>\n                    <Layout.AnnotatedSection\n                    title=\"Default payment frequency\"\n                    description=\"This payment frequency is the number of payments for each year\"\n                    >\n                        <Card sectioned>\n                            <TextField\n                            value={frequency}\n                            onChange={this.handleChange('frequency')}\n                            label=\"Payment frequency\"\n                            type=\"frequency\"\n                            />\n                        </Card>\n                    </Layout.AnnotatedSection>\n                </Layout>\n                <Stack distribution=\"trailing\">\n                <PageActions\n                    primaryAction={[\n                        {\n                        content: 'Save',\n                        onAction: () => {\n                            const repaymentInput = {\n                                price: interest + period + frequency\n                            };\n                            handleSubmit({\n                                variables: { input: repaymentInput },\n                            });\n                        },\n                        },\n                    ]}\n                />\n                </Stack>\n            </Form>\n        </Page>\n         );\n        }}\n      </Mutation>\n      );\n    }\n  \n    handleSubmit = () => {\n      this.setState({\n        interest: this.state.interest,\n        period: this.state.period,\n        frequency: this.state.frequency\n      });\n      console.log('submission', this.state);\n    };\n  \n    handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n    };\n  }\n  \n  export default AnnotatedLayout;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAaA;AACA;AAEA;AACA;AAcA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAkGA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAxGA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAEA;AADA;AAGA;AAAA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAEA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AAGA;AATA;AAFA;AAmBA;AAGA;;;;AAlGA;AACA;AAiHA;;;;A","sourceRoot":""}